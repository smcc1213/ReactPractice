{"ast":null,"code":"//Simple Counter App that I created via SoloLearn\nimport React from'react';import ReactDOM from'react-dom';import{Provider}from'react-redux';import{createStore}from'redux';import{connect}from'react-redux';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function incrementCounter(num){return{type:'INCREMENT',num:num};}var initialState={count:0};function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'INCREMENT':return{count:state.count+action.num};default:return state;}}function Counter(props){function handleClick(){props.incrementCounter(1);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:props.count}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:\"Increment\"})]});}function mapStateToProps(state){return{count:state.count};}var mapDispatchToProps={incrementCounter:incrementCounter};var store=createStore(reducer);var MyCounter=connect(mapStateToProps,mapDispatchToProps)(Counter);var el=/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(MyCounter,{})});ReactDOM.render(el,document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","Provider","createStore","connect","incrementCounter","num","type","initialState","count","reducer","state","action","Counter","props","handleClick","mapStateToProps","mapDispatchToProps","store","MyCounter","el","render","document","getElementById"],"sources":["C:/Users/Sean McConville/ReactPractice/counter/react-redux-counter-app/src/index.js"],"sourcesContent":["//Simple Counter App that I created via SoloLearn\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport './index.css';\r\n\r\n\r\nfunction incrementCounter(num) {\r\n  return { type: 'INCREMENT', num: num }\r\n}\r\n\r\nconst initialState = {\r\n  count: 0\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case 'INCREMENT':\r\n      return { count: state.count + action.num };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Counter(props) {\r\n  function handleClick() {\r\n    props.incrementCounter(1);\r\n  }\r\n    return <div>\r\n    <p>{props.count}</p>\r\n    <button onClick={handleClick}>Increment</button>\r\n    </div>;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    count: state.count\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  incrementCounter\r\n}\r\n\r\nconst store = createStore(reducer);\r\n\r\nconst MyCounter = connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n\r\nconst el = <Provider store={store}>\r\n          <MyCounter/>\r\n        </Provider>; \r\n\r\nReactDOM.render(\r\n  el, \r\n  document.getElementById('root')\r\n);\r\n"],"mappings":"AAAA;AAEA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,SAAP,KAAqB,WAArB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,KAA4B,OAA5B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAO,aAAP,C,wFAGA,QAASC,iBAAT,CAA0BC,GAA1B,CAA+B,CAC7B,MAAO,CAAEC,IAAI,CAAE,WAAR,CAAqBD,GAAG,CAAEA,GAA1B,CAAP,CACD,CAED,GAAME,aAAY,CAAG,CACnBC,KAAK,CAAE,CADY,CAArB,CAIA,QAASC,QAAT,EAA+C,IAA9BC,MAA8B,2DAAtBH,YAAsB,IAARI,OAAQ,2CAC7C,OAAOA,MAAM,CAACL,IAAd,EACE,IAAK,WAAL,CACE,MAAO,CAAEE,KAAK,CAAEE,KAAK,CAACF,KAAN,CAAcG,MAAM,CAACN,GAA9B,CAAP,CACF,QACE,MAAOK,MAAP,CAJJ,CAMD,CAED,QAASE,QAAT,CAAiBC,KAAjB,CAAwB,CACtB,QAASC,YAAT,EAAuB,CACrBD,KAAK,CAACT,gBAAN,CAAuB,CAAvB,EACD,CACC,mBAAO,oCACP,mBAAIS,KAAK,CAACL,KAAV,EADO,cAEP,eAAQ,OAAO,CAAEM,WAAjB,uBAFO,GAAP,CAIH,CAED,QAASC,gBAAT,CAAyBL,KAAzB,CAAgC,CAC9B,MAAO,CACLF,KAAK,CAAEE,KAAK,CAACF,KADR,CAAP,CAGD,CACD,GAAMQ,mBAAkB,CAAG,CACzBZ,gBAAgB,CAAhBA,gBADyB,CAA3B,CAIA,GAAMa,MAAK,CAAGf,WAAW,CAACO,OAAD,CAAzB,CAEA,GAAMS,UAAS,CAAGf,OAAO,CAACY,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CJ,OAA7C,CAAlB,CAEA,GAAMO,GAAE,cAAG,KAAC,QAAD,EAAU,KAAK,CAAEF,KAAjB,uBACD,KAAC,SAAD,IADC,EAAX,CAIAjB,QAAQ,CAACoB,MAAT,CACED,EADF,CAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF"},"metadata":{},"sourceType":"module"}